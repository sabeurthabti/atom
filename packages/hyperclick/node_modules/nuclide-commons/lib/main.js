
/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

module.exports = Object.defineProperties({

  asyncFind: function asyncFind(items, test, thisArg) {
    return require('./promises').asyncFind(items, test, thisArg);
  },

  asyncExecute: function asyncExecute(command, args, options) {
    return require('./process').asyncExecute(command, args, options);
  },

  checkOutput: function checkOutput(command, args, options) {
    return require('./process').checkOutput(command, args, options);
  },

  createArgsForScriptCommand: function createArgsForScriptCommand(command) {
    var args = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];

    return require('./process').createArgsForScriptCommand(command, args);
  },

  createExecEnvironment: function createExecEnvironment(originalEnv, commonBinaryPaths) {
    return require('./process').createExecEnvironment(originalEnv, commonBinaryPaths);
  },

  denodeify: function denodeify(f) {
    return require('./promises').denodeify(f);
  },

  safeSpawn: function safeSpawn(command, args) {
    var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

    return require('./process').safeSpawn(command, args, options);
  },

  scriptSafeSpawn: function scriptSafeSpawn(command) {
    var args = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];
    var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

    return require('./process').scriptSafeSpawn(command, args, options);
  },

  readFile: function readFile(filePath, options) {
    return require('./filesystem').readFile(filePath, options);
  },

  findNearestFile: function findNearestFile(fileName, pathToDirectory) {
    return require('./filesystem').findNearestFile(fileName, pathToDirectory);
  }

}, {
  array: {
    get: function get() {
      return require('./array');
    },
    configurable: true,
    enumerable: true
  },
  object: {
    get: function get() {
      return require('./object');
    },
    configurable: true,
    enumerable: true
  },
  fsPromise: {
    get: function get() {
      return require('./filesystem');
    },
    configurable: true,
    enumerable: true
  },
  httpPromise: {
    get: function get() {
      return require('./http');
    },
    configurable: true,
    enumerable: true
  },
  strings: {
    get: function get() {
      return require('./strings');
    },
    configurable: true,
    enumerable: true
  },
  paths: {
    get: function get() {
      return require('./paths');
    },
    configurable: true,
    enumerable: true
  },
  PromisePool: {
    get: function get() {
      return require('./PromiseExecutors').PromisePool;
    },
    configurable: true,
    enumerable: true
  },
  PromiseQueue: {
    get: function get() {
      return require('./PromiseExecutors').PromiseQueue;
    },
    configurable: true,
    enumerable: true
  },
  extend: {
    get: function get() {
      return require('./extend');
    },
    configurable: true,
    enumerable: true
  },
  debounce: {
    get: function get() {
      return require('./debounce');
    },
    configurable: true,
    enumerable: true
  },
  vcs: {
    get: function get() {
      return require('./vcs');
    },
    configurable: true,
    enumerable: true
  },
  url: {
    get: function get() {
      return require('./url');
    },
    configurable: true,
    enumerable: true
  },
  dnsUtils: {
    get: function get() {
      return require('./dns_utils');
    },
    configurable: true,
    enumerable: true
  },
  env: {
    get: function get() {
      return require('./environment');
    },
    configurable: true,
    enumerable: true
  },
  promises: {
    get: function get() {
      return require('./promises');
    },
    configurable: true,
    enumerable: true
  },
  error: {
    get: function get() {
      return require('./error');
    },
    configurable: true,
    enumerable: true
  },
  event: {
    get: function get() {
      return require('./event');
    },
    configurable: true,
    enumerable: true
  },
  session: {
    get: function get() {
      return require('./session');
    },
    configurable: true,
    enumerable: true
  },
  singleton: {
    get: function get() {
      return require('./singleton');
    },
    configurable: true,
    enumerable: true
  },
  COMMON_BINARY_PATHS: {
    get: function get() {
      return require('./process').COMMON_BINARY_PATHS;
    },
    configurable: true,
    enumerable: true
  },
  clientInfo: {
    get: function get() {
      return require('./clientInfo');
    },
    configurable: true,
    enumerable: true
  },
  systemInfo: {
    get: function get() {
      return require('./systemInfo');
    },
    configurable: true,
    enumerable: true
  },
  runtimeInfo: {
    get: function get() {
      return require('./runtimeInfo');
    },
    configurable: true,
    enumerable: true
  }
});
//# sourceMappingURL=data:application/json;base64,
