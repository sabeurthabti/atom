
/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

// Since nuclide-commons is a Node package, we might end up having multiple copy of it running in
// Node/Atom. To make sure we only have one copy of sessionId, we store it as a property of `global`
// object with SESSION_ID_KEY as key.
var SESSION_ID_KEY = '_nuclide_session_id_key';

module.exports = Object.defineProperties({

  reset: function reset() {
    require('./singleton').clear(SESSION_ID_KEY);
  }
}, {
  id: {
    /**
     * Get a RFC4122 (http://www.ietf.org/rfc/rfc4122.txt) v4 UUID as current session's ID.
     * Unless node process is terminated or `reset()` is called, the session id will keep identical.
     */

    get: function get() {
      return require('./singleton').get(SESSION_ID_KEY, require('uuid').v4);
    },
    configurable: true,
    enumerable: true
  }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvZm9sZGVycy93MS9fMm1jNm0wNTBxbjIzMm5wc2Y5ejNoZnNoNThfamgvVC90bXBpMzV6akdwdWJsaXNoX3BhY2thZ2VzL25wbS9udWNsaWRlLWNvbW1vbnMvbGliL3Nlc3Npb24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxDQUFDOzs7Ozs7Ozs7Ozs7O0FBY1osSUFBSSxjQUFjLEdBQUcseUJBQXlCLENBQUM7O0FBRS9DLE1BQU0sQ0FBQyxPQUFPLDJCQUFHOztBQVdmLE9BQUssRUFBQSxpQkFBUztBQUNaLFdBQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxLQUFLLENBQUMsY0FBYyxDQUFDLENBQUM7R0FDOUM7Q0FDRjtBQVRLLElBQUU7Ozs7OztTQUFBLGVBQVc7QUFDZixhQUFPLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxHQUFHLENBQy9CLGNBQWMsRUFDZCxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDdkI7Ozs7RUFLRixDQUFDIiwiZmlsZSI6Ii92YXIvZm9sZGVycy93MS9fMm1jNm0wNTBxbjIzMm5wc2Y5ejNoZnNoNThfamgvVC90bXBpMzV6akdwdWJsaXNoX3BhY2thZ2VzL25wbS9udWNsaWRlLWNvbW1vbnMvbGliL3Nlc3Npb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGJhYmVsJztcbi8qIEBmbG93ICovXG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgbGljZW5zZSBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGluXG4gKiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vLyBTaW5jZSBudWNsaWRlLWNvbW1vbnMgaXMgYSBOb2RlIHBhY2thZ2UsIHdlIG1pZ2h0IGVuZCB1cCBoYXZpbmcgbXVsdGlwbGUgY29weSBvZiBpdCBydW5uaW5nIGluXG4vLyBOb2RlL0F0b20uIFRvIG1ha2Ugc3VyZSB3ZSBvbmx5IGhhdmUgb25lIGNvcHkgb2Ygc2Vzc2lvbklkLCB3ZSBzdG9yZSBpdCBhcyBhIHByb3BlcnR5IG9mIGBnbG9iYWxgXG4vLyBvYmplY3Qgd2l0aCBTRVNTSU9OX0lEX0tFWSBhcyBrZXkuXG52YXIgU0VTU0lPTl9JRF9LRVkgPSAnX251Y2xpZGVfc2Vzc2lvbl9pZF9rZXknO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLyoqXG4gICAqIEdldCBhIFJGQzQxMjIgKGh0dHA6Ly93d3cuaWV0Zi5vcmcvcmZjL3JmYzQxMjIudHh0KSB2NCBVVUlEIGFzIGN1cnJlbnQgc2Vzc2lvbidzIElELlxuICAgKiBVbmxlc3Mgbm9kZSBwcm9jZXNzIGlzIHRlcm1pbmF0ZWQgb3IgYHJlc2V0KClgIGlzIGNhbGxlZCwgdGhlIHNlc3Npb24gaWQgd2lsbCBrZWVwIGlkZW50aWNhbC5cbiAgICovXG4gIGdldCBpZCgpOiBzdHJpbmcge1xuICAgIHJldHVybiByZXF1aXJlKCcuL3NpbmdsZXRvbicpLmdldChcbiAgICAgIFNFU1NJT05fSURfS0VZLFxuICAgICAgcmVxdWlyZSgndXVpZCcpLnY0KTtcbiAgfSxcblxuICByZXNldCgpOiB2b2lkIHtcbiAgICByZXF1aXJlKCcuL3NpbmdsZXRvbicpLmNsZWFyKFNFU1NJT05fSURfS0VZKTtcbiAgfSxcbn07XG4iXX0=
